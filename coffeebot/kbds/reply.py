'''from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, KeyboardButtonPollType
from aiogram.utils.keyboard import ReplyKeyboardBuilder

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
start_kb = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="–ú–µ–Ω—é"),
            KeyboardButton(text="–û –º–∞–≥–∞–∑–∏–Ω–µ"),
        ],
        {
            KeyboardButton(text="–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"),
            KeyboardButton(text="–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"),
        }
    ],
    resize_keyboard = True, # –ü–æ–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    input_field_placeholder = "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?" # –°–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–≤–æ–¥–∏–º–æ–µ –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞ 
)
del_kbd = ReplyKeyboardRemove() # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã


# –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—è ReplyKeyboardBuilder
start_kb2 = ReplyKeyboardBuilder()
start_kb2.add(
    KeyboardButton(text = "–û –º–∞–≥–∞–∑–∏–Ω–µ"),
    KeyboardButton(text = "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"),
    KeyboardButton(text = "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"),
)
start_kb2.adjust(2,2)


# –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è  —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏–∑ –≤—Ç–æ—Ä–æ–π –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
# –∞ —Ç–∞–∫ –∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ (2 –∫–Ω–æ–ø–∫–∏ –∏ 2 —Ä—è–¥–∞) —á–µ—Ä–µ–∑ adjust
start_kb3 = ReplyKeyboardBuilder()
start_kb3.attach(start_kb2)
start_kb3.add(KeyboardButton(text = "–°–ø–∏—Å–æ–∫ –∫–æ—Ñ–µ –Ω–∞ –≤—ã–±–æ—Ä: "))
start_kb3.adjust(2,2)

# –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ—Ç–∫–∏
test_kb = ReplyKeyboardMarkup(
    keyboard = [
        [
            KeyboardButton(text = "–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å", request_poll = KeyboardButtonPollType()),
        ],
        [
            KeyboardButton(text = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä ‚òéÔ∏è", request_contact = True),
            KeyboardButton(text = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é üó∫Ô∏è", request_location = True),
        ],
    ],
    resize_keyboard = True,
)

# –ö–æ—Ñ–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
coffee_kb = ReplyKeyboardBuilder()
coffee_kb.add(
    KeyboardButton(text="–õ–∞—Ç—Ç–µ"),
    KeyboardButton(text="–ö–∞–ø—É—á–∏–Ω–æ"),
    KeyboardButton(text="–ê–º–µ—Ä–∏–∫–∞–Ω–æ"),
    KeyboardButton(text="–î–∏–ø"),
    KeyboardButton(text="–†–∞—Ñ"),
    KeyboardButton(text="–ü–æ–Ω–æ—Å(ultrarare!)"),
)
coffee_kb.adjust(2,2,2)'''

from aiogram.types import KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder


def get_keyboard(
    *btns: str,
    placeholder: str = None,
    request_contact: int = None,
    request_location: int = None,
    sizes: tuple[int] = (2,),
):
    '''
    Parameters request_contact and request_location must be as indexes of btns args for buttons you need.
    Example:
    get_keyboard(
            "–ú–µ–Ω—é",
            "–û –º–∞–≥–∞–∑–∏–Ω–µ",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            request_contact=4,
            sizes=(2, 2, 1)
        )
    '''
    keyboard = ReplyKeyboardBuilder()

    for index, text in enumerate(btns, start=0):
        
        if request_contact and request_contact == index:
            keyboard.add(KeyboardButton(text=text, request_contact=True))

        elif request_location and request_location == index:
            keyboard.add(KeyboardButton(text=text, request_location=True))
        else:

            keyboard.add(KeyboardButton(text=text))

    return keyboard.adjust(*sizes).as_markup(
            resize_keyboard=True, input_field_placeholder=placeholder)
